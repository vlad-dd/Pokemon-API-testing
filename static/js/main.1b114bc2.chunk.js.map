{"version":3,"sources":["Components/Header/Header.jsx","Components/Footer/Footer.jsx","API.js","redux/MyPokemonsReducer.js","Components/Main/Village.jsx","redux/homePageReducer.js","Components/Main/Main.jsx","Components/AllPokemons/Pokemon.jsx","redux/AllPokemonsReducer.js","Components/AllPokemons/AllPokemons.jsx","Components/MyPokemons/MyPokemon.jsx","Components/MyPokemons/MyVillage.jsx","Components/MyPokemons/MyPokemons.jsx","Components/Login/Forms.jsx","Components/Login/Validators.jsx","redux/LoginReducer.js","Components/Login/LoginPokemon.jsx","Components/Login/Login.jsx","Components/Main/Leaders.jsx","Components/Main/Type.jsx","Components/Main/TypeInfo.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["Header","to","className","src","Footer","PokemonAPI","axios","get","currentPageUrl","name","id","login","password","rememberMe","post","data","url","delete","SET_VILLAGE","SET_POKEMONS","SET_ALL_COUNT","ABOUT_TYPE","initalState","myVillage","myPokes","allCount","about","MyPokemonsReducer","state","action","type","addedVillages","addedPokemons","countData","aboutData","connect","setVillageThunkCreator","newData","dispatch","setCountThunkCreator","setAboutThunkCreator","then","response","length","onClick","window","alert","SET_VILLAGES","initialState","villages","getVillagesThunkCreator","village","homePageReducer","props","useEffect","villageData","map","el","setPokemonThunkCreator","useState","addPokemonToPokeball","setAddPokemonToPokeball","addPokemon","SET_POKEMONS_DATA","SET_ALL_DATA","SET_NEXT_PAGE","SET_PREVIOUS_PAGE","pokemons","allData","nextPage","previousPage","setNextPageActionCreator","next","page","setPrevPageActionCreator","previous","prevPage","AllPokemonsReducer","newPokemons","allPokemonsData","setPokemonsThunkCreator","results","setAllPokemonsDataThunkCreator","allNewData","search","setSearch","setCurrentPageUrl","onChange","currentTarget","value","console","log","filter","item","includes","sprites","front_default","pokemonsInBag","setAddedPokemons","pokemon","formControlError","LoginInputArea","input","meta","hasError","touched","error","PasswordInputArea","requiredFields","SET_LOGIN_DATA","LoginReducer","loginInfo","LoginPokemon","class","minLength","minLengthThunkCreator","maxLength","maxLengthThunkCreator","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","validate","setLoginDataThunkCreator","setLoginDataActionCreator","formData","Leaders","Type","leadersData","leaders","header","img","theme","description","gif","setType","App","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b114bc2.chunk.js","sourcesContent":["import React from 'react'\nimport './Header.css';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => {\n    return (\n        <NavLink to='/main'>\n        <header className='main'>\n            <div className='header_item'>\n                <div className='title'>My Pokemons</div>\n               <NavLink to='/my'><img className='active_icons' src='https://image.flaticon.com/icons/png/512/287/287221.png' /></NavLink>\n            </div>\n\n            <div className='header_item'>\n               <div className='title'>All Pokemons</div> \n               <NavLink to='/all'><img className='active_icons' src='https://image.flaticon.com/icons/png/512/188/188990.png' /></NavLink>\n            </div>\n\n            <div className='header_item'>\n                <div className='title'>Login</div>\n            <NavLink to='/login'><img className='active_icons' src='https://image.flaticon.com/icons/png/512/362/362003.png' /></NavLink>  \n            </div>\n\n        </header>\n        </NavLink>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport './Footer.css';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <div className='main_footer'>\n                <div>\n                    <img className='footer_img' src='https://logos-world.net/wp-content/uploads/2020/05/Pokemon-Symbol.jpg' />\n                </div>\n                <div className='social_networks'>\n                    Social networks\n                </div>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer\n","import axios from 'axios';\n\nexport const PokemonAPI = {\n    getVillages() {\n        return (axios.get('https://610bf14866dd8f0017b76ba0.mockapi.io/villages'))\n    },\n\n    getPokemons(currentPageUrl) {\n        return (axios.get(currentPageUrl))\n    },\n\n    getAllPokemonInfo(name) {\n        return (axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`))\n    },\n\n    getAboutInfo(id) {\n        return (axios.get(`https://610bf14866dd8f0017b76ba0.mockapi.io/types/${id}`))\n    },\n\n    setLoginData(login, password, rememberMe) {\n        return (axios.post('https://610bf14866dd8f0017b76ba0.mockapi.io/login', {login:login, password:password, rememberMe:rememberMe } ))\n    },\n\n    setMyPokemons(data) {\n        return (axios.post('https://610bf14866dd8f0017b76ba0.mockapi.io/mypokemons', {id:data.id, name:data.name, url:data.url}))\n    },\n\n    getAddedPokemons() {\n        return (axios.get('https://610bf14866dd8f0017b76ba0.mockapi.io/mypokemons'))\n    },\n\n    deleteAddedPokemons(id) {\n        return (axios.delete(`https://610bf14866dd8f0017b76ba0.mockapi.io/mypokemons/${id}`))\n    }\n}\n","import { PokemonAPI } from \"../API\";\n\nconst SET_VILLAGE = 'SET_VILLAGE';\nconst SET_POKEMONS = 'SET_POKEMONS';\nconst SET_ALL_COUNT = 'SET_ALL_COUNT';\nconst ABOUT_TYPE = 'ABOUT_TYPE';\n\n\nlet initalState = {\n    myVillage: [],\n    myPokes: [],\n    allCount: null,\n    about: []\n}\n\nconst MyPokemonsReducer = (state = initalState, action) => {\n    let stateCopy;\n    switch(action.type) {\n        case SET_VILLAGE: {\n            stateCopy = {\n                ...state,\n                myVillage: [action.addedVillages]\n            }\n            return stateCopy;\n        }\n\n        case SET_POKEMONS: {\n            stateCopy = {\n                ...state,\n                myPokes: action.addedPokemons\n            }\n            return stateCopy;\n        }\n\n        case SET_ALL_COUNT: {\n            stateCopy = {\n                ...state,\n                allCount: action.countData\n            }\n            return stateCopy;\n        }\n\n        case ABOUT_TYPE: {\n            stateCopy = {\n                ...state,\n                about: [action.aboutData]\n            }\n            return stateCopy;\n        }\n\n\n\n        default:\n            return state;    \n    }\n}\n\n\nconst setAboutActionCreator = (data) => {\n    return {\n        type: ABOUT_TYPE,\n        aboutData: data\n    }\n}\n\nexport const setAboutThunkCreator = (id) => {\n    return (dispatch) => {\n        PokemonAPI.getAboutInfo(id).then((response) => {\n            dispatch(setAboutActionCreator(response.data))\n        })\n    }\n}\n\n\nconst setVillageActionCreator = (data) => {\n    return {\n        type: SET_VILLAGE,\n        addedVillages: data\n    }\n}\n\nexport const setVillageThunkCreator = (newData) => {\n    return (dispatch) => {\n        dispatch(setVillageActionCreator(newData))\n    }\n}\n\nconst setPokemonActionCreator = (pokemon) => {\n    return {\n        type: SET_POKEMONS,\n        addedPokemons: pokemon\n    }\n}\n\nexport const setPokemonThunkCreator = (data) => {\n    return (dispatch) => {\n        PokemonAPI.setMyPokemons(data);\n    }\n}\n\nexport const setAddedPokemons = () => {\n    return (dispatch) => {\n        PokemonAPI.getAddedPokemons().then((response) => {\n            debugger\n            dispatch(setPokemonActionCreator(response.data))\n        })\n    }\n}\n\nconst setCountActionCreator = (countData) => {\n    return {\n        type: SET_ALL_COUNT,\n        countData: countData\n    }\n}\n\nexport const setCountThunkCreator = (data) => {\n    return (dispatch) => {\n        dispatch(setCountActionCreator(data))\n\n    }\n}\n\nexport default MyPokemonsReducer;","import React from 'react'\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport { setVillageThunkCreator } from '../../redux/MyPokemonsReducer'\nimport { setCountThunkCreator } from '../../redux/MyPokemonsReducer'\nimport { setAboutThunkCreator } from '../../redux/MyPokemonsReducer'\n\nconst Village = ({name, url, setVillageThunkCreator, myPokes, setCountThunkCreator, allCount, id, setAboutThunkCreator}) => {\n\n    const selectVillage = () => {\n        window.alert(`You choose a ${name}`)\n        setVillageThunkCreator({name, url})\n    } \n\n    const aboutType = () => {\n        setAboutThunkCreator(id)\n    }\n\n    setCountThunkCreator(myPokes.length)\n\n  \n\n    return (\n        <div>\n          <div className='village '>\n                <div className='village_items'>\n                <div>{name}</div>\n                <div> \n                <NavLink to='info'><img onClick={aboutType} className='village_icons' src={url}/></NavLink>\n                    <div> You will have: {allCount} pokemons  </div>\n                </div>\n                <button className='select_button' onClick={selectVillage}>Select this type</button>\n                </div>\n                \n            </div>\n          \n            \n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        myVillage: state.MyPokemonsReducer.myVillage,\n        myPokes: state.MyPokemonsReducer.myPokes\n    }\n}\n\nexport default connect(mapStateToProps, {setVillageThunkCreator:setVillageThunkCreator,\n    setCountThunkCreator:setCountThunkCreator, setAboutThunkCreator:setAboutThunkCreator})(Village)","import { PokemonAPI } from \"../API\";\nconst SET_VILLAGES = 'SET_VILLAGES';\n\nlet initialState = {\n    villages: []\n}\n\n\nconst homePageReducer = (state = initialState, action) => {\n    let stateCopy;\n    switch(action.type){\n        case SET_VILLAGES: {\n            stateCopy = {\n                ...state,\n                villages: action.village\n            }\n            return stateCopy;\n        }\n        default:\n            return state\n    }\n}\n\n\nconst getVillagesActionCreator = (data) => {\n    return {\n        type: SET_VILLAGES,\n        village: data\n\n    }\n}\n\nexport const getVillagesThunkCreator = () => {    \n    return (dispatch) => {\n        PokemonAPI.getVillages().then(response => {\n            dispatch(getVillagesActionCreator(response.data))\n        })\n    }\n   \n}\n\ngetVillagesThunkCreator()\n\nexport default homePageReducer;","import React, { useEffect } from 'react'\nimport './Main.css';\nimport Village from './Village';\nimport { connect } from 'react-redux';\nimport { getVillagesThunkCreator } from '../../redux/homePageReducer';\n\n\n\nconst Main = (props) => {\n\n    const getVillages = () => {\n        props.getVillagesThunkCreator()\n    }\n\n    useEffect(() => {\n        getVillages();\n    }, [])\n\n    let villageData = props.villages.map((el) => {\n        return (<Village id = {el.id} allCount={props.allCount} name = {el.name} url = {el.url}/>)\n    })\n    \n\n    return (\n        <div className='wrapper'>\n            <div className='wrapper_title'><h1>Poke types</h1></div>\n            <div className='villages'>      \n            {villageData}  \n           \n            </div>\n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        villages: state.homePageReducer.villages,\n        allCount: state.MyPokemonsReducer.allCount\n    }\n    \n}\n\nexport default connect(mapStateToProps, {getVillagesThunkCreator:getVillagesThunkCreator} )(Main);\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { setPokemonThunkCreator } from '../../redux/MyPokemonsReducer'\n\nconst Pokemon = ({name, url, setPokemonThunkCreator}) => {\n\n    const [addPokemonToPokeball, setAddPokemonToPokeball] = useState(false)\n\n   const addPokemon = () => {\n    setPokemonThunkCreator({ name, url})\n    setAddPokemonToPokeball(true)\n   }\n\n    return (\n        <div className='all_pokemons'>\n             <div className='all_item'>\n                 <h3>{name}</h3>\n                 <img src={url}/> \n                 {!addPokemonToPokeball ? <img onClick={addPokemon} className='pokemon_button' src='https://image.flaticon.com/icons/png/128/744/744104.png' /> : \n                 <img onClick={addPokemon} className='pokemon_button' src='https://image.flaticon.com/icons/png/128/361/361998.png' />}\n                 \n                 </div>\n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        myPokes: state.MyPokemonsReducer.myPokes\n    }\n}\nexport default connect(mapStateToProps, {setPokemonThunkCreator:setPokemonThunkCreator})(Pokemon);\n","import { PokemonAPI } from \"../API\";\nconst SET_POKEMONS_DATA = 'SET_POKEMONS_DATA';\nconst SET_ALL_DATA = 'SET_ALL_DATA';\nconst SET_NEXT_PAGE = 'SET_NEXT_PAGE';\nconst SET_PREVIOUS_PAGE = 'SET_PREVIOUS_PAGE';\n\nlet initialState = {\n    pokemons: [],\n    allData: [],\n    nextPage: null,\n    previousPage: null\n}\n\nconst AllPokemonsReducer = (state = initialState, action) => {\n    let stateCopy;\n    switch(action.type) {\n        case SET_POKEMONS_DATA: {\n            stateCopy = {\n                ...state,\n                pokemons: action.newPokemons\n            }\n            return stateCopy;\n        }\n\n        case SET_ALL_DATA: \n            stateCopy = {\n                ...state,\n                allData: [...state.allData, action.allPokemonsData]\n            }\n            return stateCopy;\n        \n\n        case SET_NEXT_PAGE: {\n            stateCopy = {\n                ...state,\n                nextPage: action.page   \n            }\n            return stateCopy;\n        }\n\n        case SET_PREVIOUS_PAGE: {\n            stateCopy = {\n                ...state,\n                previousPage: action.prevPage\n            }\n            return stateCopy;\n        }\n\n        default:\n            return state\n    }\n}\n\n\nconst setPokemonsActionCreator = (data) => {\n    return {\n        type: SET_POKEMONS_DATA,\n        newPokemons: data\n    }\n}\n\nexport const setNextPageActionCreator = (next) => {\n    return {\n        type: SET_NEXT_PAGE,\n        page: next\n    }\n}\n\nexport const setPrevPageActionCreator = (previous) => {\n    return {\n        type: SET_PREVIOUS_PAGE,\n        prevPage: previous\n    }\n    \n}\n\nconst setAllPokemonsDataActionCreator = (allNewData) => {\n    return {\n        type: SET_ALL_DATA,\n        allPokemonsData: allNewData\n    }\n}\n\nexport const setPokemonsThunkCreator = (currentPageUrl) => {\n   return (dispatch) => {\n       PokemonAPI.getPokemons(currentPageUrl).then((response) => {\n           dispatch(setPokemonsActionCreator(response.data.results))\n           dispatch(setNextPageActionCreator(response.data.next))\n           dispatch(setPrevPageActionCreator(response.data.previous))\n    })\n    }\n}\n\nexport const setAllPokemonsDataThunkCreator = (name) => {\n    return (dispatch) => {\n        PokemonAPI.getAllPokemonInfo(name).then((response) => {\n            dispatch(setAllPokemonsDataActionCreator(response.data))\n        })\n    }\n}\n\nexport default AllPokemonsReducer","import React, { useEffect, useState } from 'react'\nimport './AllPokemons.css';\nimport Pokemon from './Pokemon';\nimport { connect } from 'react-redux';\nimport { setPokemonsThunkCreator } from '../../redux/AllPokemonsReducer';\nimport { setAllPokemonsDataThunkCreator } from '../../redux/AllPokemonsReducer';\nimport { setNextPageActionCreator } from '../../redux/AllPokemonsReducer';\nimport { setPrevPageActionCreator } from '../../redux/AllPokemonsReducer';\n\n\n\n\nconst AllPokemons = (props) => {\n\n\n    const [search, setSearch] = useState('')\n\n    const [loader, setLoader] = useState(false)\n\n    const [currentPageUrl, setCurrentPageUrl] = useState(`https://pokeapi.co/api/v2/pokemon/?offset=5&limit=5`)\n\n\n    const setData = () => {\n        props.setPokemonsThunkCreator(currentPageUrl)\n    }\n\n    const setAllPokemonData = () => { \n        props.pokemons.map((el) => {\n        props.setAllPokemonsDataThunkCreator(el.name);\n    })}\n\n    useEffect(() => {\n        setData();\n        setAllPokemonData();\n    }, [currentPageUrl])\n\n    const getInputData = (el) => {\n        setSearch(el.currentTarget.value)\n        console.log(el.currentTarget.value)\n    }\n\n    const setNextPage = () => {\n        setCurrentPageUrl(props.nextPage)\n    }\n\n    const setPreviousPage = () => {\n        setCurrentPageUrl(props.previousPage)\n    }\n   \n    return (\n        <div>\n            <div className='wrapper_title'>\n                <h1>All Pokemons</h1>\n            </div>\n           <div className='all_input_block'>\n               <div><span className='all_search_by_name'>Search by name:</span></div>\n               <input className='all_input' onChange={getInputData} value={search}/></div>\n           \n           <div className='all_pokemons'>\n           {props.allData.filter(item=> item.name.includes(search)).map((el) => {\n               return (<Pokemon name = {el.name} url={el.sprites.front_default}/>)\n               })}\n           </div>\n          \n            <div className='navigation_block'><button  className='navigation' onClick={setNextPage}>Get Pokemons</button>\n            <button  className='navigation' onClick={setPreviousPage}>Previous</button>\n            </div>\n           \n           \n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        pokemons: state.AllPokemonsReducer.pokemons,\n        allData: state.AllPokemonsReducer.allData,\n        nextPage: state.AllPokemonsReducer.nextPage,\n        previousPage: state.AllPokemonsReducer.previousPage\n    }\n}\n\nexport default connect(mapStateToProps, {setPokemonsThunkCreator:setPokemonsThunkCreator, setAllPokemonsDataThunkCreator:setAllPokemonsDataThunkCreator,\n    setNextPageActionCreator:setNextPageActionCreator, setPrevPageActionCreator:setPrevPageActionCreator})(AllPokemons);\n","import React, { useEffect, useState } from 'react'\nimport { connect, useSelector } from 'react-redux';\nimport { PokemonAPI } from '../../API';\nimport './MyPokemons.css';\n\n\n\nconst MyPokemon = ({name, url, id}) => {\n   const getData = () => {\n        console.log({name, url, id})\n        PokemonAPI.deleteAddedPokemons(id)\n    \n        \n    }\n\n\n\n\n\n    return (\n        <div>\n             <div className= 'my_pokemon'>\n                 <div className= 'pokemon'>\n                 <div><span>{name}</span></div>\n                 <img src={url}/> \n                 </div>\n                 <img className='delete_icon' onClick={getData} src='https://image.flaticon.com/icons/png/128/3096/3096673.png' />\n                 \n                </div>\n        </div>\n    )\n}\n\nexport default connect(null, {})(MyPokemon)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport MyPokemon from './MyPokemon'\n\nconst MyVillage = (props) => {\n\n    let pokemonsInBag = props.myPokes.map((el) => {\n        return ( <MyPokemon id = {el.id} name ={el.name} url={el.url}/>)\n    })\n\n    return (\n        <div className={props.className}>\n            <div >\n            <span>{props.name}</span>\n            </div>\n            <div>\n            <img className='village_icons' src={props.url}/>\n            </div>       \n            <div className={props.pokemons}>\n                {pokemonsInBag}\n            </div>            \n        </div>\n    )\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        myPokes: state.MyPokemonsReducer.myPokes \n    }\n}\n\nexport default connect(mapStateToProps, {})(MyVillage)\n","import React, { useEffect } from 'react'\nimport './MyPokemons.css'\nimport { connect } from 'react-redux';\nimport MyVillage from './MyVillage'\nimport MyPokemon from './MyPokemon';\nimport { setAddedPokemons } from '../../redux/MyPokemonsReducer';\n\nconst MyPokemons = (props) => {\n\n    useEffect(() =>{\n        props.setAddedPokemons()\n    }, [])\n\n    let village = props.myVillage.map((el) => {\n        switch(el.name) {\n            case 'Grass type':\n                return (<MyVillage pokemons = 'pokemons_info_grass' className='grass_theme' name = {el.name} url = {el.url}/>);\n\n            case 'Fire type':\n                return (<MyVillage pokemons = 'pokemons_info_fire' className='fire_theme' name = {el.name} url = {el.url}/>);\n\n            case 'Electric type':\n                return (<MyVillage pokemons = 'pokemons_info_electric' className='electric_theme' name = {el.name} url = {el.url}/>);\n\n            case 'Water type':\n                return (<MyVillage pokemons = 'pokemons_info_water' className='water_theme' name = {el.name} url = {el.url}/>);\n\n            case 'Ground type':\n                return (<MyVillage pokemons = 'pokemons_info_ground' className='ground_theme' name = {el.name} url = {el.url}/>);\n\n            case 'Rock type':\n                return (<MyVillage pokemons = 'pokemons_info_rock' className='rock_theme' name = {el.name} url = {el.url}/>);\n                   \n\n\n            default:\n                return (<MyVillage className='village_icons' name = {el.name} url = {el.url}/>)\n        }\n        \n    })\n\n    // let pokemonsInBag = props.myPokes.map((el) => {\n    //     return ( <MyPokemon name ={el.name} url={el.url}/>)\n    // })\n    return (\n        <div>\n            <div className='wrapper_title'>\n                <h2>Your type</h2>\n            </div>\n            <div className='village_info'>\n                {village}       \n            </div>\n            {/* <div className='pokemons_info'>\n            {pokemonsInBag}\n            </div>    */}\n            \n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        myVillage: state.MyPokemonsReducer.myVillage,\n        myPokes:  state.MyPokemonsReducer.myPokes \n    }\n}\n\nexport default connect(mapStateToProps, {setAddedPokemons:setAddedPokemons})(MyPokemons);\n","import './Forms.css';\nlet formControlError = 'formControlError';\n\nexport const LoginInputArea = ({input, meta, ...props}) => {\n    let hasError = meta.touched && meta.error ? <span className='textError'>{meta.error}</span> : ''\n    console.log(meta.error)\n    return (\n        <div>\n        <div>\n        <input className = {hasError ? formControlError : ''} {...input} {...props}/>\n        </div>\n        <div>\n            {hasError}\n        </div>\n        </div>\n    \n    )\n}\n\nexport const PasswordInputArea = ({input, meta , ...props}) => {\n    let hasError = meta.touched && meta.error ? <span className='textError'>{meta.error}</span>:''\n    return (\n        <div>\n            <div>\n            <input className = {hasError ? formControlError : ''} {...input} {...props}/>\n            </div>\n            <div>\n                {hasError}\n            </div>\n        </div>\n    )\n}","\nexport const requiredFields = (value) => {\n    if (value) {\n        return undefined;\n    } else {\n        return 'Field is required'\n    }       \n}\n\nexport const maxLengthThunkCreator = (maxLength) => {\n    return (value) => {\n        if(value && value.length > maxLength) {\n            return (`Ooops, max length is ${maxLength} symbols :(`);\n        }\n    }\n}\n\nexport const minLengthThunkCreator = (minLength) => {\n    return (value) => {\n        if(value && value.length < minLength) {\n            return('You must to throw symbols!')\n        }\n    }\n}","import { PokemonAPI } from \"../API\";\n\nconst SET_LOGIN_DATA = 'SET_LOGIN_DATA';\n\nlet initialState= {\n    login: [], \n}\n\nconst LoginReducer = (state = initialState , action) => {\n    let stateCopy;\n    switch(action.type) {\n        case SET_LOGIN_DATA: {\n            stateCopy = {\n                ...state,\n                login: [action.loginInfo]\n            }\n            return stateCopy;\n        }\n\n        default:\n            return state\n                \n    }\n    \n}\n\nconst setLoginDataActionCreator = (login, password, rememberMe) => {\n    return {\n        type: SET_LOGIN_DATA,\n        loginInfo: login, password, rememberMe\n    }\n}\n\nexport const setLoginDataThunkCreator = (login, password, rememberMe) => {\n    return (dispatch) => {\n        PokemonAPI.setLoginData(login, password, rememberMe);\n        dispatch(setLoginDataActionCreator(login, password, rememberMe))\n\n\n       \n    }\n}\n\nexport default LoginReducer;","import React from 'react'\nimport './Poke.css';\n\nconst LoginPokemon = () => {\n    return (\n        <div className='all'>\n        <div>\n            <div class=\"eevee\">\n  <div class=\"body\">\n    <div class=\"head\">\n      <div class=\"ears\">\n        <div class=\"ear\">\n          <div class=\"lobe\"></div>\n        </div>\n        <div class=\"ear\">\n          <div class=\"lobe\"></div>\n        </div>\n      </div>\n      <div class=\"face\">\n        <div class=\"eyes\">\n          <div class=\"eye\">\n            <div class=\"eyelid\"></div>\n          </div>\n          <div class=\"eye\">\n            <div class=\"eyelid\"></div>\n          </div>\n        </div>\n        <div class=\"nose\"></div>\n        <div class=\"mouth\"></div>\n      </div>\n    </div>\n    <div class=\"chest\">\n      <div class=\"fur\">\n        <div class=\"patch\"></div>\n      </div>\n      <div class=\"fur\">\n        <div class=\"patch\"></div>\n      </div>\n      <div class=\"fur\">\n        <div class=\"patch\"></div>\n      </div>\n    </div>\n    <div class=\"legs\">\n      <div class=\"leg\">\n        <div class=\"inner-leg\"></div>\n      </div>\n      <div class=\"leg\">\n        <div class=\"inner-leg\"></div>\n      </div>\n      <div class=\"leg\">\n        <div class=\"inner-leg\"></div>\n      </div>\n      <div class=\"leg\">\n        <div class=\"inner-leg\"></div>\n      </div>\n    </div>\n    <div class=\"tail\">\n      <div class=\"tail\">\n        <div class=\"tail\">\n          <div class=\"tail\">\n            <div class=\"tail\">\n              <div class=\"tail -end\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default LoginPokemon\n","import React, { useEffect, useState } from 'react'\nimport {reduxForm} from 'redux-form'\nimport {Field} from 'redux-form'\nimport { LoginInputArea, PasswordInputArea } from './Forms'\nimport { requiredFields, maxLengthThunkCreator, minLengthThunkCreator } from './Validators'\nimport { setLoginDataThunkCreator } from '../../redux/LoginReducer';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router';\nimport LoginPokemon from './LoginPokemon'\nimport './Login.css'\n\n\n\n\nlet minLength = minLengthThunkCreator(3);\nlet maxLength = maxLengthThunkCreator(16);\n\n\n\nconst LoginForm = (props) => {\n\n    return (\n        <div className='login_form'>\n            <form onSubmit = {props.handleSubmit} className='current_form'> \n                <div>\n                   <Field className='input_field' placeholder='Login' name='login' component={LoginInputArea} validate = {[requiredFields,maxLength,minLength]}/>\n                </div>\n                <div>\n                    <Field className='input_field' placeholder='Password' name='password' component={PasswordInputArea} validate = {[requiredFields,maxLength,minLength]} />\n                </div>\n                <div>\n                    <Field type='checkbox' name='rememberMe' component='input' />Remember me?\n                </div>               \n                <button className='login_button'>Login</button>\n            </form>\n            <div className='login_item'>\n            <LoginPokemon />\n            </div>\n   \n        </div>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.setLoginDataThunkCreator(formData.login, formData.password, formData.rememberMe)\n        console.log(formData)\n        \n    }\n  \n\n    return (\n        <div>\n            <h1 className='login_header'>Login</h1>\n            <LoginReduxForm onSubmit = {onSubmit}/>\n           \n        </div>\n    )\n};\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        login: state.LoginReducer.login\n    }\n}\n\n\n\nexport default connect(mapStateToProps, {setLoginDataThunkCreator:setLoginDataThunkCreator})(Login)\n","import React from 'react'\nimport './Type.css'\n\nconst Leaders = ({name, url}) => {\n    return (\n        <div className='current_leader'>\n            <div><img className='type_gif' src={url} /></div>\n            <div className='current_leader_name'>{name}</div>\n        </div>\n    )\n}\n\nexport default Leaders\n","import React from 'react'\nimport Leaders from './Leaders'\nimport './Type.css';\n\nconst Type = (props) => {\n\n    let leadersData = props.leaders.map((el) => {\n        return (<Leaders name = {el.name} url = {el.url}/>)\n    })\n\n\n    return (\n        <div>\n         <div className={props.header}>\n         <div className='title_span '><span>{props.name}</span></div>\n         <div className='title_img'><img className='village_icons' src = {props.img} /></div></div>\n\n        <div className={props.theme}>\n            <div className='about_current_type'>\n            <div className='description_block'>{props.description}</div>\n            <div className='gif'><img className='type_gif' src={props.gif} /></div>\n            </div>\n          <div className='leaders_title'><h2>Leaders</h2></div>\n          <div className='leaders_block'>\n              {leadersData}\n          </div>\n        </div>\n        </div>\n    )\n}\n\nexport default Type\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Type from './Type'\n\nconst TypeInfo = (props) => {\n\n    let setType = props.about.map((el) => {\n        switch(el.name) {\n            case 'Grass type':\n                return (<Type header = 'pokemons_grass'  theme='grass' img= {el.img} name = {el.name} gif = {el.gif} description = {el.description}  leaders = {el.leaders}/>);\n\n            case 'Fire type':\n                return (<Type header = 'pokemons_fire' theme='fire' img= {el.img} name = {el.name} gif = {el.gif}  description = {el.description}  leaders = {el.leaders}/>);\n\n            case 'Electric type':\n                debugger\n                return (<Type header = 'pokemons_electric'  theme='electric' img= {el.img} name = {el.name} gif = {el.gif}  description = {el.description}  leaders = {el.leaders}/>);\n\n            case 'Water type':\n                return (<Type header = 'pokemons_water'  theme='water' img= {el.img} name = {el.name} gif = {el.gif}  description = {el.description}  leaders = {el.leaders}/>);\n\n            case 'Ground type':\n                return (<Type header = 'pokemons_ground'  theme='ground' img= {el.img} name = {el.name} gif = {el.gif}  description = {el.description} leaders = {el.leaders}/>);\n\n            case 'Rock type':\n                return (<Type header = 'pokemons_rock'  theme='rock' img= {el.img} name = {el.name} gif = {el.gif}  description = {el.description}  leaders = {el.leaders}/>);\n            default:\n                return(<Type name = {el.name} img= {el.img} description = {el.description} gif = {el.gif} leaders = {el.leaders} />)\n        }\n    })\n\n    \n    return (\n        <div>\n            <div>{setType}</div>\n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        about: state.MyPokemonsReducer.about\n    }\n}\n\nexport default connect(mapStateToProps, {})(TypeInfo);\n","import React from 'react'\nimport './App.css'\nimport Header from './Components/Header/Header'\nimport Footer from './Components/Footer/Footer'\nimport Main from './Components/Main/Main'\nimport { Route } from 'react-router'\nimport AllPokemons from './Components/AllPokemons/AllPokemons'\nimport MyPokemons from './Components/MyPokemons/MyPokemons'\nimport Login from './Components/Login/Login'\nimport TypeInfo from './Components/Main/TypeInfo'\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <Route path=\"/main\" render={() =>  <Main />}/>\n      <Route path=\"/all\" render={() => <AllPokemons />}/>\n      <Route path=\"/my\" render={() => <MyPokemons />}/>\n      <Route path=\"/login\" render={() => <Login />}/>\n      <Route path=\"/info\" render={() => <TypeInfo />}/>\n      <Footer />\n\n      \n    \n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import homePageReducer from \"./homePageReducer\";\nimport {applyMiddleware, combineReducers, createStore} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport AllPokemonsReducer from './AllPokemonsReducer';\nimport { compose } from 'redux';\nimport MyPokemonsReducer from './MyPokemonsReducer';\nimport {reducer as formReducer} from 'redux-form';\nimport LoginReducer from './LoginReducer';\n\n\n\n\nlet reducers = combineReducers({homePageReducer: homePageReducer, AllPokemonsReducer: AllPokemonsReducer, MyPokemonsReducer:MyPokemonsReducer,\nform: formReducer, LoginReducer:LoginReducer })\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nwindow.store = store;\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from './redux/store'\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <Provider store = {store}>\n    <App />\n    </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}